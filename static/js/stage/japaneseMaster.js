// 此文件可用于区分平假名和片假名
// 同时，对于每一个假名，提供键盘输入方法

// 痛苦 * 5，怎么这么多

const hiragana = [
    'あ', 'い', 'う', 'え', 'お', 'か', 'き', 'く',
    'け', 'こ', 'さ', 'し', 'す', 'せ', 'そ', 'た',
    'ち', 'つ', 'て', 'と', 'な', 'に', 'ぬ', 'ね',
    'の', 'は', 'ひ', 'ふ', 'へ', 'ほ', 'ま', 'み',
    'む', 'め', 'も', 'や', 'ゆ', 'よ', 'ら', 'り',
    'る', 'れ', 'ろ', 'わ', 'を', 'ん', 'が', 'ぎ',
    'ぐ', 'げ', 'ご', 'ざ', 'じ', 'ず', 'ぜ', 'ぞ',
    'だ', 'ぢ', 'づ', 'で', 'ど', 'ば', 'び', 'ぶ',
    'べ', 'ぼ', 'ぱ', 'ぴ', 'ぷ', 'ぺ', 'ぽ', 'ぁ',
    'ぃ', 'ぅ', 'ぇ', 'ぉ', 'っ', 'ゃ', 'ゅ', 'ょ'
    // 'ゎ', 不会打
    // 'ゐ', 'ゑ' 不认识
];

const katakana = [
    'ア', 'イ', 'ウ', 'エ', 'オ', 'カ', 'キ', 'ク',
    'ケ', 'コ', 'サ', 'シ', 'ス', 'セ', 'ソ', 'タ',
    'チ', 'ツ', 'テ', 'ト', 'ナ', 'ニ', 'ヌ', 'ネ',
    'ノ', 'ハ', 'ヒ', 'フ', 'ヘ', 'ホ', 'マ', 'ミ',
    'ム', 'メ', 'モ', 'ヤ', 'ユ', 'ヨ', 'ラ', 'リ',
    'ル', 'レ', 'ロ', 'ワ', 'ヲ', 'ン', 'ガ', 'ギ',
    'グ', 'ゲ', 'ゴ', 'ザ', 'ジ', 'ズ', 'ゼ', 'ゾ',
    'ダ', 'ヂ', 'ヅ', 'デ', 'ド', 'バ', 'ビ', 'ブ',
    'ベ', 'ボ', 'パ', 'ピ', 'プ', 'ペ', 'ポ', 'ァ',
    'ィ', 'ゥ', 'ェ', 'ォ', 'ッ', 'ャ', 'ュ', 'ョ'
    // 'ヮ', 不会打
    // 'ヰ', 'ヱ' 不认识
];

// 平假名「へ」和片假名「ヘ」是两个字符！

const keyboard = [
    'A', 'I', 'U', 'E',
    'O', 'Ka', 'Ki', 'Ku',
    'Ke', 'Ko', 'Sa', 'Shi',
    'Su', 'Se', 'So', 'Ta',
    'Chi', 'Tsu', 'Te', 'To',
    'Na', 'Ni', 'Nu', 'Ne',
    'No', 'Ha', 'Hi', 'Fu',
    'He', 'Ho', 'Ma', 'Mi',
    'Mu', 'Me', 'Mo', 'Ya',
    'Yu', 'Yo', 'Ra', 'Ri',
    'Ru', 'Re', ['Shift', 'Ke'], 'Wa',
    ['Shift', 'Wa'], 'N', ['Ka', 'G'], ['Ki', 'G'],
    ['Ku', 'G'], ['Ke', 'G'], ['Ko', 'G'], ['Sa', 'G'],
    ['Si', 'G'], ['Su', 'G'], ['Se', 'G'], ['So', 'G'],
    ['Ta', 'G'], ['Ti', 'G'], ['Tu', 'G'], ['Te', 'G'],
    ['To', 'G'], ['Ha', 'G'], ['Hi', 'G'], ['Hu', 'G'],
    ['He', 'G'], ['Ho', 'G'], ['Ha', 'P'], ['Hi', 'P'],
    ['Hu', 'P'], ['He', 'P'], ['Ho', 'P'], ['Shift', 'A'],
    ['Shift', 'I'], ['Shift', 'U'], ['Shift', 'E'], ['Shift', 'O'],
    ['Shift', 'Tsu'], ['Shift', 'Ya'], ['Shift', 'Yu'], ['Shift', 'Yo']
]


function isHiragana(x) {
    return hiragana.indexOf(x) != -1;
}
function isKatakana(x) {
    return katakana.indexOf(x) != -1;
}

function typeHiragana(x) {
    if (isHiragana(x) == false)
        return [];
    let id = hiragana.indexOf(x);
    return keyboard[id];
}
function typeKatakana(x) {
    if (isKatakana(x) == false)
        return [];
    let id = katakana.indexOf(x);
    return keyboard[id];
}